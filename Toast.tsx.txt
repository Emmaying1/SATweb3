import React, { useState, useEffect } from 'react';

interface ToastProps {
    message: string;
    onClear: () => void;
}

const Toast: React.FC<ToastProps> = ({ message, onClear }) => {
    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        if (message) {
            setIsVisible(true);
            const timer = setTimeout(() => {
                setIsVisible(false);
                // Allow time for fade-out animation before clearing message
                setTimeout(onClear, 300);
            }, 3000); // Toast visible for 3 seconds

            return () => clearTimeout(timer);
        }
    }, [message, onClear]);

    return (
        <div
            aria-live="assertive"
            className={`fixed top-5 right-5 z-[2000] transition-all duration-300 ease-in-out ${
                isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-5'
            }`}
        >
            {message && (
                <div className="bg-green-500/90 dark:bg-green-600/90 backdrop-blur-sm text-white font-semibold px-6 py-3 rounded-lg shadow-2xl flex items-center gap-3">
                    <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                    </svg>
                    <span>{message}</span>
                </div>
            )}
        </div>
    );
};

export default Toast;